{"version":3,"sources":["src/emails-input.js","src/index.js"],"names":["EmailsInput","onChangeEvent","document","createEvent","initEvent","isEmailValid","email","test","EMAIL_STATUSES","VALID","INVALID","areGlobalHandlersAttached","getInput","input","createElement","className","setAttribute","onblur","handleBlur","isEmailsInput","element","includes","getEmailObj","value","status","handleInputValue","trim","replace","container","parentElement","render","handleKeyPress","event","target","charCode","preventDefault","handlePaste","paste","clipboardData","window","getData","pastedEmails","split","map","val","initContainer","root","state","emails","addEventListener","removeChild","appendChild","newEmails","concat","dispatchEvent","forEach","emailContainer","innerHTML","insertBefore","getElementsByClassName","options","onChange","replaceAll","getState","addEmails","emailsInput","getElementById","console","log","getRandomInt","Math","floor","random","validCount","reduce","count","alert"],"mappings":"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","file":"src.af538b7b.js","sourceRoot":"..","sourcesContent":["import './emails-input.scss';\n\n// useing the CustomEvent constructor is not working in IE11. We could polyfill it\nconst onChangeEvent = document.createEvent('CustomEvent');\nonChangeEvent.initEvent('emailsInput.change', true, false);\n\nconst isEmailValid = (email) => {\n  return /^(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+\\s?,)*(\\s?[^\\s,]+@[^\\s,]+\\.[^\\s,]+)$/.test(\n    email\n  );\n};\n\nexport const EMAIL_STATUSES = {\n  VALID: 'valid',\n  INVALID: 'invalid'\n};\n\nlet areGlobalHandlersAttached = false;\n\nconst getInput = () => {\n  const input = document.createElement('input');\n  input.className = 'emails-input__input';\n  input.setAttribute('type', 'text');\n  input.setAttribute('placeholder', 'add more people...');\n  input.onblur = handleBlur;\n  return input;\n};\n\nconst isEmailsInput = (element) =>\n  element.className.includes('emails-input__input');\n\nconst getEmailObj = (value) => {\n  // I tend to use strings over boolean because it's easier to extend later.\n  // for instance if we want to later keep track of duplicated emails and style them differently\n  const status = isEmailValid(value)\n    ? EMAIL_STATUSES.VALID\n    : EMAIL_STATUSES.INVALID;\n  return { value, status };\n};\n\nconst handleInputValue = (input) => {\n  if (!input.value.trim().replace(/,/g, '')) {\n    return;\n  }\n\n  const container = input.parentElement;\n  render(container, [getEmailObj(input.value)]);\n  input.value = '';\n};\n\nconst handleKeyPress = (event) => {\n  const input = event.target;\n  if (\n    isEmailsInput(input) &&\n    (event.charCode === 44 || event.charCode === 13)\n  ) {\n    event.preventDefault();\n\n    handleInputValue(input);\n  }\n};\n\nconst handleBlur = (event) => {\n  const input = event.target;\n  if (isEmailsInput(input)) {\n    handleInputValue(input);\n  }\n};\n\nconst handlePaste = (event) => {\n  const input = event.target;\n  if (isEmailsInput(input)) {\n    const container = input.parentElement;\n    let paste = (event.clipboardData || window.clipboardData).getData('text');\n    if (paste) {\n      event.preventDefault();\n      const pastedEmails = paste\n        .split(',')\n        .map((val) => getEmailObj(val.trim()));\n      render(container, pastedEmails);\n    }\n  }\n};\n\nconst initContainer = (root) => {\n  const container = document.createElement('div');\n  container.className = 'emails-input';\n  container.state = { emails: [] };\n  container.addEventListener('click', ({ target }) => {\n    if (target.className.includes('emails-input__remove-tag')) {\n      // normally you would do target.parentElement.remove but it doesn't work in IE.\n      target.parentElement.parentElement.removeChild(target.parentElement);\n    }\n  });\n  const input = getInput();\n  container.appendChild(input);\n  root.appendChild(container);\n  return container;\n};\n\nconst render = (container, newEmails) => {\n  container.state.emails = container.state.emails.concat(newEmails);\n  container.dispatchEvent(onChangeEvent);\n  newEmails.forEach((email) => {\n    const emailContainer = document.createElement('div');\n    emailContainer.className = `emails-input__tag emails-input__tag--${email.status}`;\n    emailContainer.innerHTML = `\n      <span>${email.value}</span>\n      <button class=\"emails-input__remove-tag\" aria-label=\"remove ${email.value}\">\n        <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 0.8L7.2 0L4 3.2L0.8 0L0 0.8L3.2 4L0 7.2L0.8 8L4 4.8L7.2 8L8 7.2L4.8 4L8 0.8Z\" fill=\"#050038\"/>\n        </svg>\n      </span>\n    `;\n    container.insertBefore(\n      emailContainer,\n      container.getElementsByClassName('emails-input__input')[0]\n    );\n  });\n};\n\nfunction EmailsInput(root, options = {}) {\n  const container = initContainer(root);\n  if (options.onChange) {\n    container.addEventListener('emailsInput.change', (event) => {\n      options.onChange(event, container.state.emails);\n    });\n  }\n\n  if (!areGlobalHandlersAttached) {\n    document.addEventListener('keypress', handleKeyPress);\n    document.addEventListener('blur', handleBlur);\n    document.addEventListener('paste', handlePaste);\n    areGlobalHandlersAttached = true;\n  }\n\n  return {\n    replaceAll: (emails = []) => {\n      // Maybe put emails in their own container ? ðŸ¤”\n      container.state.emails = [];\n      const input = container.getElementsByClassName('emails-input__input')[0];\n      container.innerHTML = '';\n      container.appendChild(input);\n      emails = emails.map(getEmailObj);\n      render(container, emails);\n    },\n    getState: () => container.state.emails,\n    addEmails: (emails) => {\n      render(container, emails.map(getEmailObj));\n    }\n  };\n}\n\nexport default EmailsInput;\n","import './styles.scss';\n\nimport EmailsInput, { EMAIL_STATUSES } from './emails-input';\nconst emailsInput = EmailsInput(document.getElementById('emails'), {\n  onChange: (event, value) => console.log({ event, value })\n});\n\ndocument.getElementById('btnAddEmail').addEventListener('click', () => {\n  function getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(999));\n  }\n  emailsInput.addEmails([`random${getRandomInt()}@veryrandom.com`]);\n});\ndocument.getElementById('btnEmailCount').addEventListener('click', () => {\n  const emails = emailsInput.getState();\n  const validCount = emails.reduce((count, email) => {\n    if (email.status === EMAIL_STATUSES.VALID) {\n      count++;\n    }\n    return count;\n  }, 0);\n  window.alert(validCount);\n});\n// btnEmailCount\n\n// document.addEventListener()\n// console.log({ input });\n\n// const test = document.getElementById('test');\n// console.log(test);\n// test.addEventListener('click', () =>\n//   input.replaceAll(['asdd', 'wqe@add.com', 'wqe@ss', '45423@ua.com'])\n// );\n// test.onclcik = () => {\n//   console.log('asdasdasdasd');\n// };\n"]}